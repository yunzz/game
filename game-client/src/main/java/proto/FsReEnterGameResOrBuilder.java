// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Wuziqi.proto

package proto;

public interface FsReEnterGameResOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Message.FsReEnterGameRes)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 黑子，白子
   * </pre>
   *
   * <code>.Message.Side side = 1;</code>
   * @return The enum numeric value on the wire for side.
   */
  int getSideValue();
  /**
   * <pre>
   * 黑子，白子
   * </pre>
   *
   * <code>.Message.Side side = 1;</code>
   * @return The side.
   */
  proto.Side getSide();

  /**
   * <pre>
   * 开始时间 ms
   * </pre>
   *
   * <code>int64 startTime = 2;</code>
   * @return The startTime.
   */
  long getStartTime();

  /**
   * <pre>
   * 回合剩余时间 ms
   * </pre>
   *
   * <code>int64 roundTime = 3;</code>
   * @return The roundTime.
   */
  long getRoundTime();

  /**
   * <pre>
   * 可悔棋次数
   * </pre>
   *
   * <code>int32 revertCount = 5;</code>
   * @return The revertCount.
   */
  int getRevertCount();

  /**
   * <pre>
   * 是否我的回合
   * </pre>
   *
   * <code>bool myTurn = 6;</code>
   * @return The myTurn.
   */
  boolean getMyTurn();

  /**
   * <pre>
   * 棋盘
   * </pre>
   *
   * <code>repeated .Message.Col board = 7;</code>
   */
  java.util.List<proto.Col> 
      getBoardList();
  /**
   * <pre>
   * 棋盘
   * </pre>
   *
   * <code>repeated .Message.Col board = 7;</code>
   */
  proto.Col getBoard(int index);
  /**
   * <pre>
   * 棋盘
   * </pre>
   *
   * <code>repeated .Message.Col board = 7;</code>
   */
  int getBoardCount();
  /**
   * <pre>
   * 棋盘
   * </pre>
   *
   * <code>repeated .Message.Col board = 7;</code>
   */
  java.util.List<? extends proto.ColOrBuilder> 
      getBoardOrBuilderList();
  /**
   * <pre>
   * 棋盘
   * </pre>
   *
   * <code>repeated .Message.Col board = 7;</code>
   */
  proto.ColOrBuilder getBoardOrBuilder(
      int index);

  /**
   * <pre>
   * 是否悔棋中
   * </pre>
   *
   * <code>bool revert = 8;</code>
   * @return The revert.
   */
  boolean getRevert();

  /**
   * <pre>
   * 悔棋发起人
   * </pre>
   *
   * <code>int64 revertUid = 9;</code>
   * @return The revertUid.
   */
  long getRevertUid();

  /**
   * <pre>
   * 游戏是否结束
   * </pre>
   *
   * <code>bool end = 11;</code>
   * @return The end.
   */
  boolean getEnd();

  /**
   * <pre>
   * 配置回合时间 ms
   * </pre>
   *
   * <code>int64 roundTimeConfig = 12;</code>
   * @return The roundTimeConfig.
   */
  long getRoundTimeConfig();

  /**
   * <pre>
   * 配置悔棋时间
   * </pre>
   *
   * <code>int64 revertTimeConfig = 13;</code>
   * @return The revertTimeConfig.
   */
  long getRevertTimeConfig();

  /**
   * <pre>
   *悔棋剩余回合数
   * </pre>
   *
   * <code>int32 surrenderRemain = 14;</code>
   * @return The surrenderRemain.
   */
  int getSurrenderRemain();
}
